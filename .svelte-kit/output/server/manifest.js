export const manifest = {
	appDir: "_app",
	assets: new Set(["favicon.png"]),
	mimeTypes: {".png":"image/png"},
	_: {
		entry: {"file":"_app/immutable/start-19d39a35.js","imports":["_app/immutable/start-19d39a35.js","_app/immutable/chunks/index-cac77216.js","_app/immutable/chunks/index-786f648c.js"],"stylesheets":[]},
		nodes: [
			() => import('./nodes/0.js'),
			() => import('./nodes/1.js'),
			() => import('./nodes/55.js'),
			() => import('./nodes/10.js'),
			() => import('./nodes/2.js'),
			() => import('./nodes/40.js'),
			() => import('./nodes/5.js'),
			() => import('./nodes/44.js'),
			() => import('./nodes/6.js'),
			() => import('./nodes/47.js'),
			() => import('./nodes/7.js'),
			() => import('./nodes/49.js'),
			() => import('./nodes/8.js'),
			() => import('./nodes/50.js'),
			() => import('./nodes/9.js'),
			() => import('./nodes/54.js'),
			() => import('./nodes/3.js'),
			() => import('./nodes/15.js'),
			() => import('./nodes/4.js'),
			() => import('./nodes/34.js'),
			() => import('./nodes/38.js'),
			() => import('./nodes/39.js'),
			() => import('./nodes/41.js'),
			() => import('./nodes/42.js'),
			() => import('./nodes/43.js'),
			() => import('./nodes/45.js'),
			() => import('./nodes/46.js'),
			() => import('./nodes/48.js'),
			() => import('./nodes/51.js'),
			() => import('./nodes/52.js'),
			() => import('./nodes/53.js'),
			() => import('./nodes/56.js'),
			() => import('./nodes/11.js'),
			() => import('./nodes/12.js'),
			() => import('./nodes/13.js'),
			() => import('./nodes/14.js'),
			() => import('./nodes/16.js'),
			() => import('./nodes/17.js'),
			() => import('./nodes/18.js'),
			() => import('./nodes/19.js'),
			() => import('./nodes/20.js'),
			() => import('./nodes/21.js'),
			() => import('./nodes/22.js'),
			() => import('./nodes/23.js'),
			() => import('./nodes/24.js'),
			() => import('./nodes/25.js'),
			() => import('./nodes/26.js'),
			() => import('./nodes/27.js'),
			() => import('./nodes/28.js'),
			() => import('./nodes/29.js'),
			() => import('./nodes/30.js'),
			() => import('./nodes/31.js'),
			() => import('./nodes/32.js'),
			() => import('./nodes/33.js'),
			() => import('./nodes/35.js'),
			() => import('./nodes/36.js'),
			() => import('./nodes/37.js')
		],
		routes: [
			{
				type: 'page',
				id: "",
				pattern: /^\/$/,
				names: [],
				types: [],
				path: "/",
				shadow: null,
				a: [0,2],
				b: [1]
			},
			{
				type: 'endpoint',
				id: "stores",
				pattern: /^\/stores\/?$/,
				names: [],
				types: [],
				load: () => import('./entries/endpoints/stores.js')
			},
			{
				type: 'page',
				id: "Button",
				pattern: /^\/Button\/?$/,
				names: [],
				types: [],
				path: "/Button",
				shadow: null,
				a: [0,3],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions",
				pattern: /^\/Functions\/?$/,
				names: [],
				types: [],
				path: "/Functions",
				shadow: null,
				a: [0,4,5],
				b: [1]
			},
			{
				type: 'page',
				id: "Grammar",
				pattern: /^\/Grammar\/?$/,
				names: [],
				types: [],
				path: "/Grammar",
				shadow: null,
				a: [0,6,7],
				b: [1]
			},
			{
				type: 'page',
				id: "Law",
				pattern: /^\/Law\/?$/,
				names: [],
				types: [],
				path: "/Law",
				shadow: null,
				a: [0,8,9],
				b: [1]
			},
			{
				type: 'page',
				id: "Legal and Constitutional Matters",
				pattern: /^\/Legal and Constitutional Matters\/?$/,
				names: [],
				types: [],
				path: "/Legal and Constitutional Matters",
				shadow: null,
				a: [0,10,11],
				b: [1]
			},
			{
				type: 'page',
				id: "Mahjong",
				pattern: /^\/Mahjong\/?$/,
				names: [],
				types: [],
				path: "/Mahjong",
				shadow: null,
				a: [0,12,13],
				b: [1]
			},
			{
				type: 'page',
				id: "Sara",
				pattern: /^\/Sara\/?$/,
				names: [],
				types: [],
				path: "/Sara",
				shadow: null,
				a: [0,14,15],
				b: [1]
			},
			{
				type: 'endpoint',
				id: "Mahjong/experiments",
				pattern: /^\/Mahjong\/experiments\/?$/,
				names: [],
				types: [],
				load: () => import('./entries/endpoints/Mahjong/experiments.js')
			},
			{
				type: 'page',
				id: "Functions/A_Simple_Recursive_Closure",
				pattern: /^\/Functions\/A_Simple_Recursive_Closure\/?$/,
				names: [],
				types: [],
				path: "/Functions/A_Simple_Recursive_Closure",
				shadow: null,
				a: [0,4,16,17],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/Archive",
				pattern: /^\/Functions\/Archive\/?$/,
				names: [],
				types: [],
				path: "/Functions/Archive",
				shadow: null,
				a: [0,4,18,19],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/Zeta",
				pattern: /^\/Functions\/Zeta\/?$/,
				names: [],
				types: [],
				path: "/Functions/Zeta",
				shadow: null,
				a: [0,4,20],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/asyncMonads",
				pattern: /^\/Functions\/asyncMonads\/?$/,
				names: [],
				types: [],
				path: "/Functions/asyncMonads",
				shadow: null,
				a: [0,4,21],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/play",
				pattern: /^\/Functions\/play\/?$/,
				names: [],
				types: [],
				path: "/Functions/play",
				shadow: null,
				a: [0,4,22],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/stopwatch",
				pattern: /^\/Functions\/stopwatch\/?$/,
				names: [],
				types: [],
				path: "/Functions/stopwatch",
				shadow: null,
				a: [0,4,23],
				b: [1]
			},
			{
				type: 'page',
				id: "Grammar/Niether of us (has or have)",
				pattern: /^\/Grammar\/Niether of us \(has or have\)\/?$/,
				names: [],
				types: [],
				path: "/Grammar/Niether of us (has or have)",
				shadow: null,
				a: [0,6,24],
				b: [1]
			},
			{
				type: 'page',
				id: "Law/archive",
				pattern: /^\/Law\/archive\/?$/,
				names: [],
				types: [],
				path: "/Law/archive",
				shadow: null,
				a: [0,8,25],
				b: [1]
			},
			{
				type: 'page',
				id: "Law/chapter-1",
				pattern: /^\/Law\/chapter-1\/?$/,
				names: [],
				types: [],
				path: "/Law/chapter-1",
				shadow: null,
				a: [0,8,26],
				b: [1]
			},
			{
				type: 'page',
				id: "Law/law",
				pattern: /^\/Law\/law\/?$/,
				names: [],
				types: [],
				path: "/Law/law",
				shadow: null,
				a: [0,8,27],
				b: [1]
			},
			{
				type: 'page',
				id: "Mahjong/terms",
				pattern: /^\/Mahjong\/terms\/?$/,
				names: [],
				types: [],
				path: "/Mahjong/terms",
				shadow: null,
				a: [0,12,28],
				b: [1]
			},
			{
				type: 'page',
				id: "Mahjong/yaku",
				pattern: /^\/Mahjong\/yaku\/?$/,
				names: [],
				types: [],
				path: "/Mahjong/yaku",
				shadow: null,
				a: [0,12,29],
				b: [1]
			},
			{
				type: 'page',
				id: "Sara/For-Sarabeth",
				pattern: /^\/Sara\/For-Sarabeth\/?$/,
				names: [],
				types: [],
				path: "/Sara/For-Sarabeth",
				shadow: null,
				a: [0,14,30],
				b: [1]
			},
			{
				type: 'page',
				id: "shared/Button",
				pattern: /^\/shared\/Button\/?$/,
				names: [],
				types: [],
				path: "/shared/Button",
				shadow: null,
				a: [0,31],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/A_Simple_Recursive_Closure/array",
				pattern: /^\/Functions\/A_Simple_Recursive_Closure\/array\/?$/,
				names: [],
				types: [],
				path: "/Functions/A_Simple_Recursive_Closure/array",
				shadow: null,
				a: [0,4,16,32],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/A_Simple_Recursive_Closure/asyncMonads",
				pattern: /^\/Functions\/A_Simple_Recursive_Closure\/asyncMonads\/?$/,
				names: [],
				types: [],
				path: "/Functions/A_Simple_Recursive_Closure/asyncMonads",
				shadow: null,
				a: [0,4,16,33],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/A_Simple_Recursive_Closure/asynchronous_functions",
				pattern: /^\/Functions\/A_Simple_Recursive_Closure\/asynchronous_functions\/?$/,
				names: [],
				types: [],
				path: "/Functions/A_Simple_Recursive_Closure/asynchronous_functions",
				shadow: null,
				a: [0,4,16,34],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/A_Simple_Recursive_Closure/functional_programming",
				pattern: /^\/Functions\/A_Simple_Recursive_Closure\/functional_programming\/?$/,
				names: [],
				types: [],
				path: "/Functions/A_Simple_Recursive_Closure/functional_programming",
				shadow: null,
				a: [0,4,16,35],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/A_Simple_Recursive_Closure/score",
				pattern: /^\/Functions\/A_Simple_Recursive_Closure\/score\/?$/,
				names: [],
				types: [],
				path: "/Functions/A_Simple_Recursive_Closure/score",
				shadow: null,
				a: [0,4,16,36],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/Archive/Async_monad",
				pattern: /^\/Functions\/Archive\/Async_monad\/?$/,
				names: [],
				types: [],
				path: "/Functions/Archive/Async_monad",
				shadow: null,
				a: [0,4,18,37],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/Archive/Button",
				pattern: /^\/Functions\/Archive\/Button\/?$/,
				names: [],
				types: [],
				path: "/Functions/Archive/Button",
				shadow: null,
				a: [0,4,18,38],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/Archive/Monad",
				pattern: /^\/Functions\/Archive\/Monad\/?$/,
				names: [],
				types: [],
				path: "/Functions/Archive/Monad",
				shadow: null,
				a: [0,4,18,39],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/Archive/Monad0",
				pattern: /^\/Functions\/Archive\/Monad0\/?$/,
				names: [],
				types: [],
				path: "/Functions/Archive/Monad0",
				shadow: null,
				a: [0,4,18,40],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/Archive/Monad3",
				pattern: /^\/Functions\/Archive\/Monad3\/?$/,
				names: [],
				types: [],
				path: "/Functions/Archive/Monad3",
				shadow: null,
				a: [0,4,18,41],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/Archive/ObjectMonad",
				pattern: /^\/Functions\/Archive\/ObjectMonad\/?$/,
				names: [],
				types: [],
				path: "/Functions/Archive/ObjectMonad",
				shadow: null,
				a: [0,4,18,42],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/Archive/Quadratic",
				pattern: /^\/Functions\/Archive\/Quadratic\/?$/,
				names: [],
				types: [],
				path: "/Functions/Archive/Quadratic",
				shadow: null,
				a: [0,4,18,43],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/Archive/binary_arithmetic",
				pattern: /^\/Functions\/Archive\/binary_arithmetic\/?$/,
				names: [],
				types: [],
				path: "/Functions/Archive/binary_arithmetic",
				shadow: null,
				a: [0,4,18,44],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/Archive/bitmask_prime_generator",
				pattern: /^\/Functions\/Archive\/bitmask_prime_generator\/?$/,
				names: [],
				types: [],
				path: "/Functions/Archive/bitmask_prime_generator",
				shadow: null,
				a: [0,4,18,45],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/Archive/bitwise_primes",
				pattern: /^\/Functions\/Archive\/bitwise_primes\/?$/,
				names: [],
				types: [],
				path: "/Functions/Archive/bitwise_primes",
				shadow: null,
				a: [0,4,18,46],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/Archive/code",
				pattern: /^\/Functions\/Archive\/code\/?$/,
				names: [],
				types: [],
				path: "/Functions/Archive/code",
				shadow: null,
				a: [0,4,18,47],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/Archive/experiment",
				pattern: /^\/Functions\/Archive\/experiment\/?$/,
				names: [],
				types: [],
				path: "/Functions/Archive/experiment",
				shadow: null,
				a: [0,4,18,48],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/Archive/factors",
				pattern: /^\/Functions\/Archive\/factors\/?$/,
				names: [],
				types: [],
				path: "/Functions/Archive/factors",
				shadow: null,
				a: [0,4,18,49],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/Archive/functional_JS",
				pattern: /^\/Functions\/Archive\/functional_JS\/?$/,
				names: [],
				types: [],
				path: "/Functions/Archive/functional_JS",
				shadow: null,
				a: [0,4,18,50],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/Archive/game",
				pattern: /^\/Functions\/Archive\/game\/?$/,
				names: [],
				types: [],
				path: "/Functions/Archive/game",
				shadow: () => import('./entries/endpoints/Functions/Archive/game.js'),
				a: [0,4,18,51],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/Archive/gameBA KUP",
				pattern: /^\/Functions\/Archive\/gameBA KUP\/?$/,
				names: [],
				types: [],
				path: "/Functions/Archive/gameBA KUP",
				shadow: null,
				a: [0,4,18,52],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/Archive/haskell",
				pattern: /^\/Functions\/Archive\/haskell\/?$/,
				names: [],
				types: [],
				path: "/Functions/Archive/haskell",
				shadow: null,
				a: [0,4,18,53],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/Archive/monadsOld",
				pattern: /^\/Functions\/Archive\/monadsOld\/?$/,
				names: [],
				types: [],
				path: "/Functions/Archive/monadsOld",
				shadow: null,
				a: [0,4,18,54],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/Archive/proxy",
				pattern: /^\/Functions\/Archive\/proxy\/?$/,
				names: [],
				types: [],
				path: "/Functions/Archive/proxy",
				shadow: null,
				a: [0,4,18,55],
				b: [1]
			},
			{
				type: 'page',
				id: "Functions/Archive/score",
				pattern: /^\/Functions\/Archive\/score\/?$/,
				names: [],
				types: [],
				path: "/Functions/Archive/score",
				shadow: null,
				a: [0,4,18,56],
				b: [1]
			}
		],
		matchers: async () => {
			
			return {  };
		}
	}
};
