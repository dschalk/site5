import{S as ye,i as Me,s as He,a as m,l as n,r as E,K as Ie,h as i,c as v,m as o,n as f,u as T,q as te,b as a,G as w,M as Re,N as ce}from"../../../chunks/index-cac77216.js";import{f as _e}from"../../../chunks/index-54fd7bcd.js";function $e(s){let r,l,u,h,p,L,c,F,d,S,x,y,M,P,z,U,ae,Q,q,le,A,D,se,J,V,re,N,W,Y,H,B=s[0][0]+"",C,I,G=s[0][1]+"",K,R,j=s[0][2]+"",O,$,X=s[0][3]+"",Z,b,g=s[0][4]+"",ee,k,ie=s[0][5]+"",_;return{c(){r=m(),l=n("div"),u=n("p"),h=E(`
Quadratic Formula
`),L=E(`>
`),c=n("h2"),F=E("Functional Programming Paradigm Ignored"),d=m(),S=n("p"),x=E(`Some Haskell programmers behave like dour monks in an austere monistary, always ready to downvote advice that deviates from Haskell's "no side effects, no mutations" ethos. Some fanatical functional JavaScript coders won't even mutate variables confined entirely in function scope.`),y=m(),M=n("p"),P=E('What follows is certainly not the best way to solve quadratic equations. It shows that a programmer who relies on functions more than classes, or the ersatz "classes" introduced in ES2016, can use'),z=m(),U=n("p"),ae=E(`The function m(), returned by "monad" factory M(), has side effects (mutates "RESULT" while running), and it doesn't return the same value each time it processes identical arguments. Yes! It is unlike mathematical functions. It is vry impure.`),Q=m(),q=n("p"),le=E(`The third time "m(()=>4)" executes, a process runs placing a new item in RESULT's head, and incrementing the index of each RESULT property. Since RESULT.length = 6 is maintained, the previous tail is abandoned to the garbage collector            .`),A=m(),D=n("pre"),se=E(s[2]),J=m(),V=n("pre"),re=E(s[1]),N=m(),W=n("br"),Y=m(),H=n("div"),C=m(),I=n("div"),K=m(),R=n("div"),O=m(),$=n("div"),Z=m(),b=n("div"),ee=m(),k=n("div"),this.h()},l(e){Ie('[data-svelte="svelte-1490m"]',document.head).forEach(i),r=v(e),l=o(e,"DIV",{style:!0});var ne=f(l);u=o(ne,"P",{}),f(u).forEach(i),h=T(ne,`
Quadratic Formula
`),ne.forEach(i),L=T(e,`>
`),c=o(e,"H2",{});var oe=f(c);F=T(oe,"Functional Programming Paradigm Ignored"),oe.forEach(i),d=v(e),S=o(e,"P",{});var fe=f(S);x=T(fe,`Some Haskell programmers behave like dour monks in an austere monistary, always ready to downvote advice that deviates from Haskell's "no side effects, no mutations" ethos. Some fanatical functional JavaScript coders won't even mutate variables confined entirely in function scope.`),fe.forEach(i),y=v(e),M=o(e,"P",{});var ue=f(M);P=T(ue,'What follows is certainly not the best way to solve quadratic equations. It shows that a programmer who relies on functions more than classes, or the ersatz "classes" introduced in ES2016, can use'),ue.forEach(i),z=v(e),U=o(e,"P",{});var me=f(U);ae=T(me,`The function m(), returned by "monad" factory M(), has side effects (mutates "RESULT" while running), and it doesn't return the same value each time it processes identical arguments. Yes! It is unlike mathematical functions. It is vry impure.`),me.forEach(i),Q=v(e),q=o(e,"P",{});var ve=f(q);le=T(ve,`The third time "m(()=>4)" executes, a process runs placing a new item in RESULT's head, and incrementing the index of each RESULT property. Since RESULT.length = 6 is maintained, the previous tail is abandoned to the garbage collector            .`),ve.forEach(i),A=v(e),D=o(e,"PRE",{});var pe=f(D);se=T(pe,s[2]),pe.forEach(i),J=v(e),V=o(e,"PRE",{});var de=f(V);re=T(de,s[1]),de.forEach(i),N=v(e),W=o(e,"BR",{}),Y=v(e),H=o(e,"DIV",{});var he=f(H);he.forEach(i),C=v(e),I=o(e,"DIV",{});var Ee=f(I);Ee.forEach(i),K=v(e),R=o(e,"DIV",{});var Te=f(R);Te.forEach(i),O=v(e),$=o(e,"DIV",{});var we=f($);we.forEach(i),Z=v(e),b=o(e,"DIV",{});var Le=f(b);Le.forEach(i),ee=v(e),k=o(e,"DIV",{});var Se=f(k);Se.forEach(i),this.h()},h(){document.title="Quadratic",te(l,"font-family","Times New Roman"),te(l,"text-align","center"),te(l,"color","#0000AA"),te(l,"font-size","38px")},m(e,t){a(e,r,t),a(e,l,t),w(l,u),w(l,h),a(e,L,t),a(e,c,t),w(c,F),a(e,d,t),a(e,S,t),w(S,x),a(e,y,t),a(e,M,t),w(M,P),a(e,z,t),a(e,U,t),w(U,ae),a(e,Q,t),a(e,q,t),w(q,le),a(e,A,t),a(e,D,t),w(D,se),a(e,J,t),a(e,V,t),w(V,re),a(e,N,t),a(e,W,t),a(e,Y,t),a(e,H,t),H.innerHTML=B,a(e,C,t),a(e,I,t),I.innerHTML=G,a(e,K,t),a(e,R,t),R.innerHTML=j,a(e,O,t),a(e,$,t),$.innerHTML=X,a(e,Z,t),a(e,b,t),b.innerHTML=g,a(e,ee,t),a(e,k,t),k.innerHTML=ie,_=!0},p(e,[t]){(!_||t&1)&&B!==(B=e[0][0]+"")&&(H.innerHTML=B),(!_||t&1)&&G!==(G=e[0][1]+"")&&(I.innerHTML=G),(!_||t&1)&&j!==(j=e[0][2]+"")&&(R.innerHTML=j),(!_||t&1)&&X!==(X=e[0][3]+"")&&($.innerHTML=X),(!_||t&1)&&g!==(g=e[0][4]+"")&&(b.innerHTML=g),(!_||t&1)&&ie!==(ie=e[0][5]+"")&&(k.innerHTML=ie)},i(e){_||(Re(()=>{p||(p=ce(l,_e,{},!0)),p.run(1)}),_=!0)},o(e){p||(p=ce(l,_e,{},!1)),p.run(0),_=!1},d(e){e&&i(r),e&&i(l),e&&p&&p.end(),e&&i(L),e&&i(c),e&&i(d),e&&i(S),e&&i(y),e&&i(M),e&&i(z),e&&i(U),e&&i(Q),e&&i(q),e&&i(A),e&&i(D),e&&i(J),e&&i(V),e&&i(N),e&&i(W),e&&i(Y),e&&i(H),e&&i(C),e&&i(I),e&&i(K),e&&i(R),e&&i(O),e&&i($),e&&i(Z),e&&i(b),e&&i(ee),e&&i(k)}}}function be(s,r,l){let u,h=(-r-Math.sqrt(r*r-4*s*l))/(2*s),p=(-r+Math.sqrt(r*r-4*s*l))/(2*s),L=l>0?"+":"-",c=Math.abs(l);return h===h?u=`${s}*x*x + ${r}*x ${L} ${c} = 0 has the following solutions: x = ${h} and x = ${p}`:u=`${s}*x*x + ${r}*x + ${l} = 0 has no real solutions`,u+"<br>"}function ke(s,r,l){var u=[],h=function(){var d=[],S=[];return function x(y){return y&&d.push(y),d.length===3&&(u.unshift(`${be(d[0],d[1],d[2])}`),l(0,u.length=6,u),d=[]),function(P){return P==="end"?S:x(P(y))}}(d.pop())},p=h();p(()=>3)(()=>3)(()=>-36)(()=>4)(()=>4)(()=>4)(()=>1)(()=>1)(()=>-2),p(()=>5)(()=>-3)(()=>-54)(()=>5)(()=>10)(()=>-175)(()=>1)(()=>2)(()=>-3),console.log(u);var L=`var m = M();
m(()=>3)(()=>3)(()=>-36)(()=>4)(()=>4)(()=>4)(()=>1)(()=>1)(()=>-2)
m(()=>5)(()=>-3)(()=>-54)(()=>5)(()=>10)(()=>-175)(()=>1)(()=>2)(()=>-3)`,c=`RESULT.unshift(4*x*x + 4*x + 4 = 0 has no real solutions);
RESULT.length = 6;`;return[u,L,c]}class qe extends ye{constructor(r){super(),Me(this,r,ke,$e,He,{})}}export{qe as default};
