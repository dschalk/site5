import{S as v,i as y,s as _,e as m,t as d,c as h,a as u,h as p,d as r,b as g,g as w,G as i,K as l}from"../chunks/vendor-4e552e70.js";function x(f){let e,s,t,o;return{c(){e=m("p"),s=d(`I'm refactoring my old site and putting it on a new Linode Debian 11 server. However, you might enjoy my latest work on JavaScript recursive closures (I call them "monads") at `),t=m("a"),o=d("monads"),this.h()},l(a){e=h(a,"P",{});var n=u(e);s=p(n,`I'm refactoring my old site and putting it on a new Linode Debian 11 server. However, you might enjoy my latest work on JavaScript recursive closures (I call them "monads") at `),t=h(n,"A",{href:!0});var c=u(t);o=p(c,"monads"),c.forEach(r),n.forEach(r),this.h()},h(){g(t,"href","/Functions/monads")},m(a,n){w(a,e,n),i(e,s),i(e,t),i(t,o)},p:l,i:l,o:l,d(a){a&&r(e)}}}class S extends v{constructor(e){super();y(this,e,null,x,_,{})}}export{S as default};
